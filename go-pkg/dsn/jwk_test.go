package dsn

import (
	"crypto/rsa"
	"math/big"
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestGenerateJWK(t *testing.T) {
	b, err := GenerateJWK()
	assert.NoError(t, err)
	assert.NotNil(t, b)
}

func TestRSAToJWK(t *testing.T) {
	privatekey := testRSAKey(t)
	b, err := RSAToJWK(privatekey)
	assert.NoError(t, err)
	assert.NotNil(t, b)
}

func testRSAKey(t *testing.T) *rsa.PrivateKey {
	d, _ := new(big.Int).SetString("818340213205028230272279390821338508996400450956014490534625291991950035990653786018187322671625787824008134946402359316150150843490405444925021066121571858802892755404265728881883332658609422751282499118020103518429817759788773781480784938413302602314028863163790600791965711265344200888741104658107618724993248248233993719850450422736405116900062552147686323080107718078172821861184402678955627464185690363224025839188311339859293898930164332041684200432804223931670829555401421854497737198667273390999407307869217483728735938818220656887192883735920814753698202701132567544622933341962818548771544620355914934017", 10)

	n, _ := new(big.Int).SetString("24071616944711820075114171650026060082628858327784704518028607612781162257055420634772864706431929648394084892272159525360203068146243582425516654223702627877183654627885710535786350077400038482428546294747613790075105460737556942242776572041648389877852113826375827919256309164810082088709796129254218585449090756871706741361224602704670211966663173857634701799655456061289972385553081422192636898552746091838429295140728851060847030973537120005140315852997720984300876074302946719115071081736175950728378584918786935507796649382694250755349566639617284102367111988194661336500450278183100103064271301372367359052167", 10)

	dq, _ := new(big.Int).SetString("27601482647574401504251099123130545888137773220644455740187532394620124996236429863714994551707525215515032133359962765482472380885447542457638896948313973439534261520547048503305957945522552652341870612562854920461644298053981619631944605487308816105128928987391751778066978233012249287494790924755248209089", 10)
	dp, _ := new(big.Int).SetString("98206595625017841948224822225373836597224248224332245759346483204113803833330331608015192649142787863377977240033533409295907393074660743763768324678053473720937206835027175465008860651103600330482688980763903991068752891130900724854411161984424915704264103126310654829867407789601007141175772335839206184481", 10)
	qinv, _ := new(big.Int).SetString("66248017943065479731781258211710073840208801272989235908982890882170230707567943003318987801099169499524741951622043919775460860568301190363476245507226719373257116067514848391012376257489873717851958875218196224936900533116961786417338373197712848645476622608458125885461908933369827259015891649303068035974", 10)

	p1, _ := new(big.Int).SetString("150317996531209433350323707270110589930921959872902407696248930792629244501599129845493418050000487848335999588483024944415206175582923632296659847593843345102390679504570053914339764590965659781368241299771678909374147143098438489496778016277956318763817094298736982637387493385970086764865277613422100000289", 10)
	p2, _ := new(big.Int).SetString("160137957531345923458224529322999874811516044932841332847438943922292770173366404389012889335628194055347792220610116834403752870581584241328459666191718562084521679999299921898119915534322904849196987812989715202044509769968466130118515723249093296837981110043085449387320781910138436752350045399759623041703", 10)

	e := 65537

	return &rsa.PrivateKey{
		PublicKey: rsa.PublicKey{
			N: n,
			E: e,
		},
		D:           d,
		Primes:      []*big.Int{p1, p2},
		Precomputed: rsa.PrecomputedValues{Dp: dp, Dq: dq, Qinv: qinv},
	}
}
